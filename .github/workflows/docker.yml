name: Build, Compile Java, Scan, and Publish Docker Image

on:
  push:
    branches: [ "main" ]

jobs:
  build-compile-scan-push:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout do código
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Configurar Java (ex: OpenJDK 17)
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3️⃣ Compilar arquivos Java (Maven)
      - name: Compile Java
        run: mvn clean compile

      # 4️⃣ Análise de código SonarCloud
      - name: Análise de código SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=target/classes
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # 5️⃣ Login no GitHub Container Registry
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 6️⃣ Build da imagem Docker
      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository_owner }}/biblioteca:latest .

      # 7️⃣ Scan de vulnerabilidades com Trivy
      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/biblioteca:latest
          format: 'table'
          exit-code: '0'

          

      # 8️⃣ Push da imagem Docker para GHCR
      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository_owner }}/biblioteca:latest
